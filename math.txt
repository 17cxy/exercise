1
class Solution {
    public List<String> fizzBuzz(int n) {
         List<String> reback = new ArrayList<>();
        if (n<=0){
            return reback;
        }
        for (int x = 1;x<=n;x++){
            if (x%15 == 0){
                reback.add("FizzBuzz");
            }else if (x%3 == 0){
                reback.add("Fizz");
            }else if (x%5 == 0){
                reback.add("Buzz");
            }else {
                reback.add(x+"");
            }
        }
        return reback;

    }
}

2
class Solution {
    public int countPrimes(int n) {
        if (n<=2){
            return 0;
        }
        boolean[] ifnum = new boolean[n-2];
        int sum = 0;
        int limit = n/2;
        for (int i = 2;i<=limit;i++){
            if (ifnum[i-2] == false){
                for (int j = i*2;j<n;j += i){
                    ifnum[j-2] =true;
                }
            }
        }
 
        System.out.print(Arrays.toString(ifnum));
        for (int x = 0;x<=n-3;x++){
            if (ifnum[x] == false){
                sum++;
            }
        }
        return sum;

    }
}

3
class Solution {
    public boolean isPowerOfThree(int n) {
         if (n == 1){
            return true;
        }
        if (n==2){
            return false;
        }else if (n%2 == 0){
            return false;
        }
        double re = Math.log10(n)/Math.log10(3);
        if ((re-(int)re)==0){
            return true;
        }else {
            return false;
        }

    }
}

4
class Solution {
  public static int romanToInt(String s) {
        if (s == null || s.length() == 0){
            return 0;
        }
        HashMap<Character,Integer> hashMap = new HashMap<>();
        s = s.replace("IV","1");
        hashMap.put('1',4);
        s = s.replace("IX","2");
        hashMap.put('2',9);
        s = s.replace("XL","3");
        hashMap.put('3',40);
        s = s.replace("XC","4");
        hashMap.put('4',90);
        s = s.replace("CD","5");
        hashMap.put('5',400);
        s = s.replace("CM","6");
        hashMap.put('6',900);
 
        hashMap.put('I',1);
        hashMap.put('V',5);
        hashMap.put('X',10);
        hashMap.put('L',50);
        hashMap.put('C',100);
        hashMap.put('D',500);
        hashMap.put('M',1000);
 
        int sum = 0;
        for (char x : s.toCharArray()){
            if (hashMap.containsKey(x)){
                sum += hashMap.get(x);
            }else {
                return -1;
            }
        }
        return sum;
    }

}
